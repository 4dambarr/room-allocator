{"version":3,"sources":["AllocateRooms.js","AddPersonModal.js","AddRoomModal.js","CheckAllocateModal.js","EditPersonModal.js","SetupPage.js","App.js","reportWebVitals.js","index.js"],"names":["AllocateRooms","choices","checkTaken","val","taken","room","checkSorted","person","length","name","resetConflict","rooms","holder","conflict","isConflict","i","other","push","rand","Math","floor","random","AddPersonModal","props","useState","setName","setRooms","forceUpdate","setValue","value","useForceUpdate","close","setShow","onSubmit","addPerson","allowDrop","e","preventDefault","drag","document","getElementById","target","id","getAttribute","dataTransfer","setData","drop","getData","oldRank","newRank","oldRanks","newRanks","moveRank","parseInt","useEffect","show","Modal","onHide","Header","closeButton","Body","Form","Label","Control","type","onChange","onKeyDown","keyCode","className","map","index","draggable","onDrop","onDragOver","onDragStart","Footer","Button","variant","onClick","disabled","AddRoomModal","roomName","setRoomName","addRoom","require","CheckAllocteModal","checkText","EditPersonModal","startName","setStartName","updatePerson","SetUpPage","people","setPeople","showAddRoom","setShowAddRoom","showAddPeople","setShowAddPeople","showEditPerson","setShowEditPerson","personToEdit","setPersonToEdit","roomsToEdit","setRoomsToEdit","checkAllocate","setCheckAllocate","onEditPerson","rankings","split","onAllocateRooms","allocateRooms","newRooms","oldName","newName","newPeople","Container","Row","Col","alert","Table","striped","bordered","hover","toString","App","state","setState","allocations","setAllocations","result","console","log","displayPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00c963ab.chunk.js","sourcesContent":["function AllocateRooms(choices) {\n\n    function checkTaken(val) {\n        for (let room of taken) {\n            if (val === room.room){\n                return true\n            }\n        }\n        return false\n    }\n\n    function checkSorted(person){\n        for (let room = 0; room <taken.length; room++) {\n            if (taken[room].name === person){\n                return true\n            }\n        }\n        return false\n    }\n\n    function resetConflict(rooms){\n        var holder = {}\n        for (let room of rooms) {\n            holder[room] = [];\n        }\n        return holder\n    }\n\n    // Object containing conflicts for rooms\n    var conflict;\n\n    // Variable to track if there is a conflict\n    var isConflict;\n\n     // Array of taken rooms, {name: name, room: room}\n    var taken = []\n\n    var length = choices[0].rooms.length\n    var rooms = choices[0].rooms\n\n    for (let i = 0; i < length; i++){\n        conflict = resetConflict(rooms)\n        for (let person=0; person < choices.length; person++){\n            if (!checkTaken(choices[person].rooms[i]) && !checkSorted(choices[person].name)){\n                isConflict = false\n                for (let other=0; other< choices.length; other++){\n                    if (choices[person].rooms[i] == choices[other].rooms[i] && choices[person] !== choices[other] && !checkSorted(choices[other].name) && !isConflict){\n                        isConflict = true\n                        conflict[choices[person].rooms[i]].push(choices[person].name)\n                    }\n                }\n            }\n\n            if (!isConflict && !checkTaken(choices[person].rooms[i])){\n                taken.push({room: choices[person].rooms[i], name: choices[person].name})\n            }\n        }\n        for (var room in conflict) {\n            if (!checkTaken(room) && conflict[room].length > 0){\n                let rand = Math.floor(Math.random() * Math.floor(conflict[room].length))\n                let person = conflict[room][rand]\n                taken.push({name: person, room: room})\n            }\n        }\n\n    }\n\n    return taken\n}\n\nexport default AllocateRooms","import { useEffect, useState } from \"react\"\nimport { Button, Form, Modal } from \"react-bootstrap\"\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nfunction AddPersonModal(props) {\n    const [name, setName] = useState()\n    const [rooms, setRooms] = useState(props.rooms)\n    const forceUpdate = useForceUpdate();\n\n    function moveRank(room, newRank, oldRank) {\n        var oldRanks = rooms\n        var newRanks = oldRanks\n\n        if (newRank > oldRank) {\n            newRanks[oldRank] = oldRanks[oldRank + 1]\n            for (let i = oldRank; i < newRank; i++) {\n                newRanks[i] = oldRanks[i + 1]\n            }\n            newRanks[newRank] = room\n        } else {\n            newRanks[oldRank] = oldRanks[oldRanks - 1]\n            for (let i = oldRank; i > newRank; i--) {\n                newRanks[i] = oldRanks[i - 1]\n            }\n            newRanks[newRank] = room\n        }\n\n        setRooms(newRanks)\n        forceUpdate()\n    }\n\n    function close() {\n        props.setShow(false)\n    }\n\n    function onSubmit() {\n        props.addPerson(name, rooms)\n        close()\n    }\n\n    function onKeyDown(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault()\n        }\n    }\n\n    function allowDrop(e) {\n        e.preventDefault();\n    }\n\n    function drag(e) {\n        var value = document.getElementById(e.target.id).getAttribute(\"value\")\n        e.dataTransfer.setData(\"Room\", value);\n        e.dataTransfer.setData(\"Rank\", e.target.id);\n    }\n\n    function drop(e) {\n        e.preventDefault()\n        var room = e.dataTransfer.getData(\"Room\");\n        var oldRank = e.dataTransfer.getData(\"Rank\");\n        var newRank = e.target.id\n        moveRank(room, parseInt(newRank), parseInt(oldRank))\n    }\n\n    function onNameChange(e) {\n        setName(e.target.value);\n    }\n\n    useEffect(() => {\n        setRooms(props.rooms)\n        setName(\"\")\n    }, [props.show])\n\n    function displaySubmit() {\n        if(name){\n            return <Button variant=\"success\" onClick={onSubmit}>Submit</Button>\n        } else {\n            return <Button variant=\"success\" disabled>Submit</Button>\n        }\n    }\n\n    return (\n        <Modal show={props.show} onHide={close}>\n            <Modal.Header closeButton>\n                Add Person\n\t\t\t</Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" onChange={onNameChange} onKeyDown={onKeyDown}></Form.Control>\n                </Form>\n                <div className=\"Rankings-Holder\">\n                    <p>Rankings</p>\n                    {rooms.map((room, index) => {\n                        return (\n                            <div className=\"Ranking-Holder\">\n                                <div className=\"Rank-Pos\">\n                                    <p>{index + 1}.</p>\n                                </div>\n                                <div id={index} value={room} className=\"Room\" draggable onDrop={drop} onDragOver={allowDrop} onDragStart={drag}>{room}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={close}>Cancel</Button>\n                {displaySubmit()}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default AddPersonModal","import { useState } from \"react\"\nimport { Button, Form, Modal } from \"react-bootstrap\"\n\nfunction AddRoomModal(props) {\n\tconst [roomName, setRoomName] = useState()\n\n\tfunction close(){\n\t\tprops.setShow(false)\n\t}\n\n\tfunction onSubmit() {\n\t\tprops.addRoom(roomName)\n\t\tclose()\n\t}\n\n\tfunction onKeyDown(e){\n\t\tif (e.keyCode === 13){\n\t\t\t\te.preventDefault()\n\t\t\t\tonSubmit()\n\t\t}\n}\n\n\tfunction onRoomNameChange(e) {\n\t\tsetRoomName(e.target.value);\n\t}\n\n\treturn (\n\t\t<Modal show={props.show} onHide={close}>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\tAdd Room\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Label>Room Name</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" onChange={onRoomNameChange} onKeyDown={onKeyDown}></Form.Control>\n\t\t\t\t</Form>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"danger\" onClick={close}>Cancel</Button>\n\t\t\t\t<Button variant=\"success\" onClick={onSubmit}>Submit</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t)\n}\n\nexport default AddRoomModal","const { Modal, Button } = require(\"react-bootstrap\");\n\nfunction CheckAllocteModal(props){\n    function close(){\n        props.setShow(false)\n    }\n\n    return (\n        <Modal show={true} onHide={close}>\n            <Modal.Header closeButton>\n                Allocate Rooms\n\t\t\t</Modal.Header>\n            <Modal.Body>\n                {props.checkText}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\">Cancel</Button>\n                <Button variant=\"success\">Allocate Rooms</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default CheckAllocteModal","import { useEffect, useState } from \"react\"\nimport { Button, Form, Modal } from \"react-bootstrap\"\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nfunction EditPersonModal(props) {\n    const [name, setName] = useState()\n    const [startName, setStartName] = useState();\n    const [rooms, setRooms] = useState([])\n    const forceUpdate = useForceUpdate();\n\n    function moveRank(room, newRank, oldRank) {\n        var oldRanks = rooms\n        var newRanks = oldRanks\n\n        if (newRank > oldRank) {\n            newRanks[oldRank] = oldRanks[oldRank + 1]\n            for (let i = oldRank; i < newRank; i++) {\n                newRanks[i] = oldRanks[i + 1]\n            }\n            newRanks[newRank] = room\n        } else {\n            newRanks[oldRank] = oldRanks[oldRanks - 1]\n            for (let i = oldRank; i > newRank; i--) {\n                newRanks[i] = oldRanks[i - 1]\n            }\n            newRanks[newRank] = room\n        }\n\n        setRooms(newRanks)\n        forceUpdate()\n    }\n\n    function close() {\n        props.setShow(false)\n    }\n\n    function onSubmit() {\n        props.updatePerson(startName, name, rooms)\n        close()\n    }\n\n    function onKeyDown(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault()\n        }\n    }\n\n    function allowDrop(e) {\n        e.preventDefault();\n    }\n\n    function drag(e) {\n        var value = document.getElementById(e.target.id).getAttribute(\"value\")\n        e.dataTransfer.setData(\"Room\", value);\n        e.dataTransfer.setData(\"Rank\", e.target.id);\n    }\n\n    function drop(e) {\n        e.preventDefault()\n        var room = e.dataTransfer.getData(\"Room\");\n        var oldRank = e.dataTransfer.getData(\"Rank\");\n        var newRank = e.target.id\n        moveRank(room, parseInt(newRank), parseInt(oldRank))\n    }\n\n    function onNameChange(e) {\n        setName(e.target.value);\n    }\n\n    useEffect(() => {\n        setRooms(props.rooms)\n        setName(props.name)\n        setStartName(props.name)\n    }, [props.show])\n\n    function displaySubmit() {\n        if(name){\n            return <Button variant=\"success\" onClick={onSubmit}>Submit</Button>\n        } else {\n            return <Button variant=\"success\" disabled>Submit</Button>\n        }\n    }\n\n    return (\n        <Modal show={props.show} onHide={close}>\n            <Modal.Header closeButton>\n                Add Person\n\t\t\t</Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" value={name} onChange={onNameChange} onKeyDown={onKeyDown}></Form.Control>\n                </Form>\n                <div className=\"Rankings-Holder\">\n                    <p>Rankings</p>\n                    {rooms.map((room, index) => {\n                        return (\n                            <div className=\"Ranking-Holder\">\n                                <div className=\"Rank-Pos\">\n                                    <p>{index + 1}.</p>\n                                </div>\n                                <div id={index} value={room} className=\"Room\" draggable onDrop={drop} onDragOver={allowDrop} onDragStart={drag}>{room}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={close}>Cancel</Button>\n                {displaySubmit()}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default EditPersonModal","import { useState } from 'react';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\nimport AddPersonModal from './AddPersonModal';\nimport AddRoomModal from './AddRoomModal';\nimport './App.css';\nimport CheckAllocteModal from './CheckAllocateModal';\nimport EditPersonModal from './EditPersonModal';\n\nfunction SetUpPage(props) {\n\tconst [rooms, setRooms] = useState([])\n\tconst [people, setPeople] = useState([])\n\tconst [showAddRoom, setShowAddRoom] = useState(false)\n\tconst [showAddPeople, setShowAddPeople] = useState(false)\n\tconst [showEditPerson, setShowEditPerson] = useState(false)\n\tconst [personToEdit, setPersonToEdit] = useState(null)\n\tconst [roomsToEdit, setRoomsToEdit] = useState([])\n\tconst [checkAllocate, setCheckAllocate] = useState(false)\n\tconst [checkText, setCheckText] = useState('are you sure')\n\n\tfunction addRoom(name) {\n\t\tvar newRooms = rooms;\n\t\tnewRooms.push(name)\n\t\tsetRooms(newRooms)\n\t\tfor (let person of people) {\n\t\t\tvar holder = person.rooms\n\t\t\tif (holder.length != newRooms.length) {\n\t\t\t\tholder.push(name)\n\t\t\t\tperson.rooms = holder\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onAddRoom() {\n\t\tsetShowAddRoom(true)\n\t}\n\n\tfunction addPerson(name, rankings) {\n\t\tlet person = {\n\t\t\tname: name,\n\t\t\trooms: rankings\n\t\t}\n\t\tvar holder = people;\n\t\tpeople.push(person);\n\t\tsetPeople(holder)\n\t}\n\n\tfunction onAddPeople() {\n\t\tif (rooms.length < 2) {\n\t\t\talert(\"Not enough rooms added\")\n\t\t} else {\n\t\t\tsetShowAddPeople(true)\n\t\t}\n\t}\n\n\tfunction updatePerson(oldName, newName, newRooms) {\n\t\tvar newPeople = people;\n\t\tfor (let person of newPeople) {\n\t\t\tif (person.name === oldName) {\n\t\t\t\tperson.name = newName;\n\t\t\t\tperson.rooms = newRooms\n\t\t\t}\n\t\t}\n\t\tsetPeople(newPeople)\n\t}\n\n\t// Setting it to value on name is a bit of a bodge but for this task it gets the job done\n\tfunction onEditPerson(e) {\n\t\tvar name = e.target.name\n\t\tvar rankings = e.target.value.split(\",\")\n\t\tsetPersonToEdit(name)\n\t\tsetRoomsToEdit(rankings)\n\t\tsetShowEditPerson(true)\n\t}\n\n\tfunction onAllocateRooms() {\n\t\tprops.allocateRooms(people)\n\t}\n\n\tfunction displayRooms() {\n\t\tif (rooms.length === 0) {\n\t\t\treturn <tr><td><i>No Rooms Added</i></td></tr>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\trooms.map(room => {\n\t\t\t\t\treturn <tr><td>{room}</td></tr>\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tfunction displayPeople() {\n\t\tif (people.length === 0) {\n\t\t\treturn <tr><td><i>Nobody Added</i></td></tr>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\tpeople.map(person => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{person.name}</td>\n\t\t\t\t\t\t\t<td>{person.rooms.toString()} <Button className=\"Edit-Button\" name={person.name} value={person.rooms.toString()} onClick={onEditPerson}>Edit</Button></td>\n\t\t\t\t\t\t</tr>)\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AddRoomModal\n\t\t\t\tshow={showAddRoom}\n\t\t\t\tsetShow={setShowAddRoom}\n\t\t\t\taddRoom={addRoom}\n\t\t\t/>\n\t\t\t<AddPersonModal\n\t\t\t\tshow={showAddPeople}\n\t\t\t\trooms={rooms}\n\t\t\t\tsetShow={setShowAddPeople}\n\t\t\t\taddPerson={addPerson}\n\t\t\t/>\n\t\t\t<EditPersonModal\n\t\t\t\tshow={showEditPerson}\n\t\t\t\trooms={roomsToEdit}\n\t\t\t\tname={personToEdit}\n\t\t\t\tsetShow={setShowEditPerson}\n\t\t\t\tupdatePerson={updatePerson}\n\t\t\t/>\n\t\t\t<CheckAllocteModal\n\t\t\t\tshow={checkAllocate}\n\t\t\t\tcheckText={checkText}\n\t\t\t\tsetShow={setCheckAllocate}\n\t\t\t\tonAllocateRooms={onAllocateRooms}\n\t\t\t/>\n      <Container>\n\t\t\t<Row>\n\t\t\t\t<div className=\"Title\">\n\t\t\t\t\t<h1>Room Allocator</h1>\n\t\t\t\t\t<p>Allocate rooms in your house in the fairest way possible</p>\n\t\t\t\t</div>\n\t\t\t</Row>\n\t\t\t<Row className=\"Body\">\n\t\t\t\t<Col className=\"Button-Holder\">\n\t\t\t\t\t<button className=\"Add-Button\" onClick={onAddRoom}>Add Room</button>\n\t\t\t\t\t<button className=\"Add-Button\" onClick={onAddPeople}>Add Person</button>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Table className=\"Table\" striped bordered hover>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Rooms</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{displayRooms()}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Table className=\"Table\" striped bordered hover>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Person</td>\n\t\t\t\t\t\t\t<td>Rankings</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{displayPeople()}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</Row>\n\t\t\t<Row className=\"Submit-Button-Holder\">\n\t\t\t\t<button className=\"Add-Button\" onClick={onAllocateRooms}>Allocate Rooms</button>\n\t\t\t</Row>\n      </Container>\n    </div >\n  );\n}\n\nexport default SetUpPage;\n","import { useState } from 'react';\nimport AllocateRooms from './AllocateRooms';\nimport './App.css';\nimport SetUpPage from './SetupPage';\n\nfunction App() {\n  const [state, setState] = useState('set-up')\n  const [allocations, setAllocations] = useState(null)\n\n  function onAllocateRooms(choices) {\n    var result = AllocateRooms(choices)\n    setAllocations(result)\n    setState('allocated')\n  }\n\n  function displayPage() {\n    switch (state) {\n      case 'set-up':\n        return <SetUpPage allocateRooms={onAllocateRooms} />\n      case 'allocated':\n        console.log(allocations)\n        return (\n          <div>\n            {allocations.map(person => {\n              return <p>{person.name} {'->'} {person.room}</p>\n            })}\n          </div>\n        )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {displayPage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}